on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Rust CI - Create Release

jobs:
  build-ubuntu-latest:
    name: Build on Ubuntu latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: test

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: build
          args: --release

      - name: Generate SHA-256 hash file
        run: |
          cd target/release
          sha256sum crunch > crunch.sha256

      # Upload the binary and sha256 file as artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: crunch
          path: target/release

      - uses: actions/upload-artifact@v4
        with:
          name: crunch.sha256
          path: target/release

  build-ubuntu-2204:
    name: Build on Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: test

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: build
          args: --release

      - name: Generate SHA-256 hash file
        run: |
          cd ./target/release
          sha256sum crunch > crunch.sha256

      # Rename the binary and sha256 file to include the OS version
      - run: mv target/release/crunch target/release/crunch.ubuntu-2204
      - run: mv target/release/crunch.sha256 target/release/crunch.sha256.ubuntu-2204

      # Upload the binary and sha256 file as artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: crunch.ubuntu-2204
          path: target/release

      - uses: actions/upload-artifact@v4
        with:
          name: crunch.sha256.ubuntu-2204
          path: target/release

  build-ubuntu-2004:
    name: Build on Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: test

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        env:
          CRUNCH_CONFIG_FILENAME: .env.example
        with:
          command: build
          args: --release

      - name: Generate SHA-256 hash file
        run: |
          cd ./target/release
          sha256sum crunch > crunch.sha256

      # Rename the binary and sha256 file to include the OS version
      - run: mv target/release/crunch target/release/crunch.ubuntu-2004
      - run: mv target/release/crunch.sha256 target/release/crunch.sha256.ubuntu-2004

      # Upload the binary and sha256 file as artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: crunch.ubuntu-2004
          path: target/release

      - uses: actions/upload-artifact@v4
        with:
          name: crunch.sha256.ubuntu-2004
          path: target/release

  create-release:
    needs:
      - build-ubuntu-latest
      - build-ubuntu-2204
      - build-ubuntu-2004
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Get Rustc version
        id: get_rustc
        run: echo "rustc=$(rustc -V)" >> $GITHUB_OUTPUT

      - name: Get Tag version
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Crunch ${{ steps.get_tag.outputs.tag }}
          body: "Note: This release was built using `${{ steps.get_rustc.outputs.rustc }}`"
          draft: true
          prerelease: false

      # Download the artifacts
      - uses: actions/download-artifact@v4
        with:
          name: crunch
          path: target/release

      - uses: actions/download-artifact@v4
        with:
          name: crunch.sha256
          path: target/release

      - name: Upload crunch binary on Ubuntu latest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch
          asset_name: crunch
          asset_content_type: application/octet-stream

      - name: Upload crunch sha256 on Ubuntu latest
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch.sha256
          asset_name: crunch.sha256
          asset_content_type: text/plain

      - uses: actions/download-artifact@v4
        with:
          name: crunch.ubuntu-2204
          path: target/release

      - uses: actions/download-artifact@v4
        with:
          name: crunch.sha256.ubuntu-2204
          path: target/release

      - name: Upload crunch binary on Ubuntu 22.04
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch.ubuntu-2204
          asset_name: crunch.ubuntu-2204
          asset_content_type: application/octet-stream

      - name: Upload crunch sha256 on Ubuntu 22.04
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch.sha256.ubuntu-2204
          asset_name: crunch.sha256.ubuntu-2204
          asset_content_type: text/plain

      - uses: actions/download-artifact@v4
        with:
          name: crunch.ubuntu-2004
          path: target/release

      - uses: actions/download-artifact@v4
        with:
          name: crunch.sha256.ubuntu-2004
          path: target/release

      - name: Upload crunch binary on Ubuntu 20.04
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch.ubuntu-2004
          asset_name: crunch.ubuntu-2004
          asset_content_type: application/octet-stream

      - name: Upload crunch sha256 on Ubuntu 20.04
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/crunch.sha256.ubuntu-2004
          asset_name: crunch.sha256.ubuntu-2004
          asset_content_type: text/plain
